/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { ButtonSize, ButtonTheme, ButtonType } from "./components/ui-button/typings";
import { InputChangedEvent, InputType } from "./components/ui-input/typings";
export namespace Components {
    interface UiButton {
        /**
          * Whether button should be disabled
         */
        "disabled": boolean;
        /**
          * Whether the button size is big or small
         */
        "size": ButtonSize;
        /**
          * Whether the button theme is primary or not
         */
        "theme": ButtonTheme;
        /**
          * Type of the button
         */
        "type"?: ButtonType;
    }
    interface UiInput {
        /**
          * Input disable state
         */
        "disabled": boolean;
        /**
          * Input error state
         */
        "error"?: string | null;
        /**
          * Input label or title
         */
        "label": string;
        /**
          * Input placeholder text
         */
        "placeholder"?: string;
        /**
          * Input type
         */
        "type": InputType;
        /**
          * Input field value
         */
        "value"?: string;
    }
}
declare global {
    interface HTMLUiButtonElement extends Components.UiButton, HTMLStencilElement {
    }
    var HTMLUiButtonElement: {
        prototype: HTMLUiButtonElement;
        new (): HTMLUiButtonElement;
    };
    interface HTMLUiInputElement extends Components.UiInput, HTMLStencilElement {
    }
    var HTMLUiInputElement: {
        prototype: HTMLUiInputElement;
        new (): HTMLUiInputElement;
    };
    interface HTMLElementTagNameMap {
        "ui-button": HTMLUiButtonElement;
        "ui-input": HTMLUiInputElement;
    }
}
declare namespace LocalJSX {
    interface UiButton {
        /**
          * Whether button should be disabled
         */
        "disabled"?: boolean;
        /**
          * Emit event to parent component on click
         */
        "onClickEvent"?: (event: CustomEvent<void>) => void;
        /**
          * Whether the button size is big or small
         */
        "size"?: ButtonSize;
        /**
          * Whether the button theme is primary or not
         */
        "theme"?: ButtonTheme;
        /**
          * Type of the button
         */
        "type"?: ButtonType;
    }
    interface UiInput {
        /**
          * Input disable state
         */
        "disabled"?: boolean;
        /**
          * Input error state
         */
        "error"?: string | null;
        /**
          * Input label or title
         */
        "label"?: string;
        /**
          * Emit event to parent component on click
         */
        "onInputEvent"?: (event: CustomEvent<InputChangedEvent>) => void;
        /**
          * Input placeholder text
         */
        "placeholder"?: string;
        /**
          * Input type
         */
        "type"?: InputType;
        /**
          * Input field value
         */
        "value"?: string;
    }
    interface IntrinsicElements {
        "ui-button": UiButton;
        "ui-input": UiInput;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "ui-button": LocalJSX.UiButton & JSXBase.HTMLAttributes<HTMLUiButtonElement>;
            "ui-input": LocalJSX.UiInput & JSXBase.HTMLAttributes<HTMLUiInputElement>;
        }
    }
}
